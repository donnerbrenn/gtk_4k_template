/* File generated with Shader Minifier 1.1.5
 * http://www.ctrl-alt-test.fr
 */
#ifndef SHADER_H_
# define SHADER_H_
# define VAR_FRAGCOL "f"

const char *shader_frag =
 "#version 400\n"
 "vec2 v=vec2(2560,1440);\n"
 "#define SAMPLES 100\n"
 "out vec4 f;"
 "vec3 n(vec3 v,vec3 s,float m)"
 "{"
   "return mix(dot(v,s)*s,v,cos(m))+sin(m)*cross(s,v);"
 "}"
 "float s(float v,float m,float f)"
 "{"
   "float y=max(0.,f-abs(m-v))/f;"
   "return min(v,m)-y*y*y*f/6.;"
 "}"
 "float ss(vec2 v)"
 "{"
   "return sqrt(length(v*v));"
 "}"
 "float ss(vec3 v)"
 "{"
   "return sqrt(length(v*v));"
 "}"
 "float n(vec2 v,vec2 m)"
 "{"
   "vec2 f=sqrt(v*v+.005)-m;"
   "return ss(max(f,0.))+min(0.,max(f.x,f.y));"
 "}"
 "float t(vec2 v,vec2 m,vec2 f)"
 "{"
   "float s=dot(v-m,f-m)/dot(f-m,f-m);"
   "return distance(v,mix(m,f,clamp(s,0.,1.)));"
 "}"
 "float n(vec2 v)"
 "{"
   "v+=sin(v.y*15.)*sin(v.x*15.)*.002;"
   "float m=length(v)-.73,f=atan(v.y,v.x),x=asin(sin(f*5.-1.4)*.995)/5.;"
   "f=asin(sin(f*1.3)*.99)/1.3;"
   "vec2 y=vec2(cos(f),sin(f))*length(v),d=vec2(cos(x),sin(x))*length(v);"
   "float r=t(d,vec2(.67,.22),vec2(.25,-.07));"
   "r=s(r,t(d,vec2(.23,-.07),vec2(0,.6)),.05);"
   "float z=n(y-vec2(1.4,0),vec2(.6,.1));"
   "mat2 c=mat2(.7,-.7,.7,.7);"
   "float l=v.x,i=v.y*.95-v.x*.32-.1,p=min(n(y-vec2(1.45,0),vec2(.1,.35)),n((abs(y)-vec2(1.45,.35))*c,vec2(.13)));"
   "z=s(z,max(i,p),.05);"
   "float a=n((y-vec2(1.9,0))*vec2(.6,1)*c,vec2(.2,.2));"
   "a=-s(-a,y.x-1.9,.03);"
   "z=s(z,max(l,a),.05);"
   "z=s(z,n((y-vec2(1.95,0))*c,vec2(.12,.12)),.05);"
   "float e=s(z-.05,min(max(length(v)-1.,-m),m),.1);"
   "e=-s(-e,r,.05);"
   "return e;"
 "}"
 "float s(float v,float y)"
 "{"
   "int m=floatBitsToInt(v*v/7.)^floatBitsToInt(v+.1),f=floatBitsToInt(y*y/7.)^floatBitsToInt(y+.1);"
   "return float((m*m+f)*(f*f-m)-m)/2.14e+09;"
 "}"
 "vec2 t(float v,float m)"
 "{"
   "float f=s(v,m),x=s(f,v);"
   "return vec2(f,x);"
 "}"
 "float m,r;"
 "float s(vec3 v)"
 "{"
   "vec3 f=n(v,vec3(1,0,0),2.7),z=v;"
   "v.y=v.y/1.5+1.2;"
   "v.yz=asin(sin(v.yz/20.)*.6)*20.;"
   "mat2 y=mat2(cos(2.6),-sin(2.6),sin(2.6),cos(2.6));"
   "for(int x=0;x<8;x++)"
     "v.yz-=float(x),v.yz*=y,v.y=sqrt(v.y*v.y+float(x/2+1))-.5;"
   "vec3 x=normalize(vec3(-1,1.,1.));"
   "f.yz+=asin(sin(v.yz)*.9);"
   "f.yz=asin(sin(f.yz*vec2(5.,8.))*.85)/vec2(5.,8.);"
   "r=dot(v,x);"
   "f.x=r;"
   "f+=.005*dot(sin(z.yz*8.4),cos(z.xy*6.));"
   "f+=.001*dot(sin(z.yz*50.),cos(z.xy*40.));"
   "r=s(r,mix(length(f),ss(f),.7)-.2,.2);"
   "z.x-=6.;"
   "z=n(z,vec3(.997,0,-.075),2.45);"
   "float d=n(z.yz/13.)*13.;"
   "z+=f/30.;"
   "z+=sin(v.yxz*10.)/1000.;"
   "float a=dot(z.yz,z.yz)/14.,c=smoothstep(1.1,1.5,sin(v.y*60.+sin(v.y*4.6)*1.35)+sin(v.z*50.+sin(v.z*5.6)*1.5));"
   "c+=smoothstep(1.1,1.3,sin(v.y*90.+sin(v.y*5.6)*1.45)+sin(v.z*80.+sin(v.z*7.6)*1.55));"
   "float p=n(vec2(d+2.,z.x-sqrt(sqrt(smoothstep(0.,-1.7,d)))*.1),vec2(2.,.85-a*.005))-.2;"
   "m=n(vec2(d,z.x),vec2(.12+cos(z.y/20.)*.05-a*.001,1.-a*.005))-.12+c/1500.;"
   "m=mix(m,t(vec2(d,z.x),vec2(.5,1),vec2(0,-1))-.3,.005);"
   "return min(r,min(m,p));"
 "}"
 "vec3 t(vec3 v)"
 "{"
   "mat3 f=mat3(v,v,v)-mat3(.001);"
   "return normalize(s(v)-vec3(s(f[0]),s(f[1]),s(f[2])));"
 "}"
 "const vec3 y=vec3(1.5,1.,.7),z=vec3(.4,.75,1.),x=normalize(vec3(-1,0.,1.2));"
 "vec3 p(vec3 v)"
 "{"
   "return mix(vec3(1),z,v.x*v.x)+pow(max(dot(v,x),0.),350.)*y*15.;"
 "}"
 "vec3 d(vec2 v)"
 "{"
   "v.y-=.02;"
   "v.x+=.02;"
   "vec2 f=tan(t(v.x,v.y));"
   "vec3 d=normalize(vec3(2.5,v+f*.02)),c=vec3(-120,-f);"
   "float a=-.6;"
   "d=n(d,vec3(0,1,0),a);"
   "c=n(c,vec3(0,1,0),a);"
   "vec3 l=c;"
   "bool e=false;"
   "float i=1.,b;"
   "for(int S=0;S<200&&!e;S++)"
     "{"
       "b=s(l);"
       "e=b*b<1e-07;"
       "if(e&&b==m)"
         "{"
           "vec3 o=t(l);"
           "i*=1.-abs(dot(d,o))*.5;"
           "d=reflect(d,o);"
           "b=.1;"
           "e=false;"
         "}"
       "l+=d*b;"
       "if(distance(l,c)>1000.)"
         "break;"
     "}"
   "float S=b==r?1.:0.;"
   "vec3 o=t(l),g=reflect(d,o);"
   "float u=max(0.,dot(g,x)),h=1.-abs(dot(d,o))*.9,w=smoothstep(-1.,2.,s(l+o*.5+x*3.));"
   "vec3 q=(u*.3*z*(w*.2+.7)+(pow(u,8.)*.1*y+pow(u,20.))*4.*S+(S*.8+.2)*(pow(u,80.)*3.+step(.999-S*.01,u)*10.))*h*w;"
   "return(e?q:p(d))*i;"
 "}"
 "float d(vec2 v,float m,float f,float d,float s,float y,float x,float z,float a)"
 "{"
   "float c=cos(d),r=sin(d);"
   "vec2 l=vec2(z,x);"
   "v=mat2(c,-r,r,c)*vec2(v.x-m,-v.y-f);"
   "return a*exp(dot(vec2(-.5),v*v/(l*l)))*cos(v.x*6.28/y+s);"
 "}"
 "void main()"
 "{"
   "f=vec4(0);"
   "vec2 m=(gl_FragCoord.xy.xy/v*2-1)*vec2(1,v.y/v.x);"
   "float z=s(m.x,m.y);"
   "for(int x=0;x<SAMPLES;x++)"
     "{"
       "vec2 y=tan(t(z,float(x))),c=m+y/1080;"
       "f+=vec4(d(c),1);"
     "}"
   "float y=0.;"
   "y+=d(m,.07,.03,1.89,1.08,3.65,.13,.12,1.82);"
   "y+=d(m,-.52,.94,3.26,2.84,3.72,.53,.53,.21);"
   "y+=d(m,.05,-.16,1.6,1.52,3.12,.09,.09,1.5);"
   "y+=d(m,.45,.94,6.28,2.33,4.,.48,.48,.17);"
   "y+=d(m,.3,.03,4.39,6.27,.36,.13,.13,.11);"
   "y+=d(m,.07,-.08,3.17,1.22,.41,.16,.05,.15);"
   "y+=d(m,.94,-.55,4.75,4.04,1.14,1.06,.14,.18);"
   "y+=d(m,-.88,-.18,4.03,3.94,1.29,.49,.49,.05);"
   "y+=d(m,.16,-.05,1.6,6.28,.21,.05,.05,.18);"
   "y+=d(m,-.42,.45,5.45,1.03,.76,.35,.35,.05);"
   "f/=f.w;"
   "float x=y*.9+.2;"
   "vec4 c=vec4(175,132,106,0)/128.,r=vec4(21,23,25,0)/60.;"
   "f=mix(f,mix(r,c,(max(x,.1)-.1)/.9)*sqrt(x),.6)+z*z*.02;"
   "f*=1.-dot(m,m)*.3;"
   "f=(smoothstep(vec4(-.34),vec4(1.),log(f+1.))-.2)/.8;"
 "}";

#endif // SHADER_H_
