/* File generated with Shader Minifier 1.1.5
 * http://www.ctrl-alt-test.fr
 */
#ifndef SHADER_H_
# define SHADER_H_
# define VAR_COLOR "x"

const char *shader_frag =
 "#version 400\n"
 "vec2 v=vec2(2560,1440),f=(gl_FragCoord.xy.xy/v*2-1)*vec2(1,v.y/v.x);"
 "float d=.001;"
 "vec3 m=vec3(0.,0.,-6.),M=normalize(vec3(f,1)),r=m,i[3],s[3];"
 "out vec3 x;\n"
 "#define B vec3(-.015)\n"
 "#define R vec3(.4,.0,.0)\n"
 "#define G vec3(.03)\n"
 "float n(vec2 v)"
 "{"
   "return dot(v,v);"
 "}"
 "float t(vec2 v)"
 "{"
   "return v=fract(v*vec2(233.34,851.74)),v+=dot(v,v+23.45),fract(v.x*v.y);"
 "}"
 "vec3 n(vec3 d,vec3 v)"
 "{"
   "float f=cos(v.x),r=sin(v.x);"
   "mat3 M=mat3(vec3(1,0,0),vec3(0,f,-r),vec3(0,r,f));"
   "f=cos(v.y);"
   "r=sin(v.y);"
   "M*=mat3(vec3(f,0,r),vec3(0,1,0),vec3(-r,0,f));"
   "f=cos(v.z);"
   "r=sin(v.z);"
   "M*=mat3(vec3(f,-r,0),vec3(r,f,0),vec3(0,0,1));"
   "return M*d;"
 "}struct MA{float d;vec3 col;bool hit;};"
 "MA n(vec3 v,float f,float d,float r,float M,vec3 x)"
 "{"
   "vec2 m=vec2(length(v.xz),v.y),i=vec2(r,f),t=vec2(r-d,2.*f),y=vec2(m.x-min(m.x,m.y<0.?d:r),abs(m.y)-f),s=m-i+t*clamp(dot(i-m,t)/n(t),0.,1.);"
   "float c=s.x<0.&&y.y<0.?-1.:1.,l=c*sqrt(min(n(y),n(s)))-M;"
   "return MA(l,x,false);"
 "}"
 "MA n(vec3 v,vec3 d,float M,vec3 f)"
 "{"
   "vec3 r=abs(v)-d;"
   "float m=length(max(r,0.))+min(max(r.x,max(r.y,r.z)),0.)-M;"
   "return MA(m,f,false);"
 "}"
 "MA t(vec3 v,vec3 f,float d,vec3 r)"
 "{"
   "float m=dot(v,f)+d;"
   "return MA(m,r,false);"
 "}"
 "MA t(MA v,MA d)"
 "{"
   "return v.d<d.d?v:d;"
 "}"
 "MA e(MA v,MA d)"
 "{"
   "return v.d>d.d?v:d;"
 "}"
 "float e(float v,float f,float r)"
 "{"
   "float d=max(r-abs(v-f),0.);"
   "return min(v,f)-d*d*.25/r;"
 "}"
 "MA e(vec3 v)"
 "{"
   "v=n(n(v,vec3(-.7,0.,-.04)),vec3(0,1.1,0));"
   "v.y-=1.05;"
   "v.x+=.5;"
   "MA f=t(v+vec3(0,1.25,0),vec3(0,1,0),1.,G),r=n(v+vec3(0,.1,0),1.,.15,.25,0,R),d=n(v+vec3(0,.6,0),.05,.3,.3,.05,B),m=n(v+vec3(0,1.,0),.3,.6,.6,.05,B),M=n(v+vec3(0,1.4,0),vec3(.9,.15,.9),.1,B),i=n(v+vec3(1.75,1.34,.75),.05,.55,.45,.02,R);"
   "i.d-=.0005;"
   "MA x=n(v+vec3(1.75,1.34,-.75),.05,.55,.45,.02,R);"
   "i.d-=.0005;"
   "MA y=n(v+vec3(1.75,1.27,.75),.05,.4,.4,.015,R),s=n(v+vec3(1.75,1.27,-.75),.05,.4,.4,.015,R),z=n(v+vec3(.5,1.85,0),vec3(1.55,0.,1.05),.45,B),l=n(v+vec3(10,sin(v.x*1.8)*.1+2.05,sin(sin(v.x*.7))+.75),vec3(8,0,0),.1,B),c=n(v+vec3(0.,-1.,0.),vec3(0),.5,R);"
   "vec3 h=mod(v,.0001)-5e-05;"
   "MA a=n(h,vec3(0.),t(v.xz)*.002,B);"
   "f.d=mix(f.d,a.d,.05);"
   "v=n(n(v,vec3(-.5,0,0)),vec3(0,1.5,0));"
   "MA o=MA(0.,B,true);"
   "o.d=e(m.d,M.d,.15);"
   "o.d=e(o.d,d.d,.05);"
   "c=t(c,r);"
   "c=t(c,z);"
   "c.d=mix(c.d,a.d,.3);"
   "c=t(c,o);"
   "c=t(c,i);"
   "c=t(c,x);"
   "c=t(c,y);"
   "c=t(c,s);"
   "c=t(c,f);"
   "c=t(c,l);"
   "return c;"
 "}"
 "MA n(vec3 v,vec3 f,float M)"
 "{"
   "MA m;"
   "while(distance(v,r)<M&&!m.hit)"
     "r+=m.d*f,m=e(r),m.hit=m.d<d;"
   "return m;"
 "}"
 "vec3 c(vec3 v)"
 "{"
   "mat3 m=mat3(v,v,v)-mat3(.005);"
   "return normalize(e(v).d-vec3(e(m[0]).d,e(m[1]).d,e(m[2]).d));"
 "}"
 "float c(in vec3 v,in vec3 d,float m,float f,float r)"
 "{"
   "float c=1.,M=1e+20;"
   "for(float x=m;x<f;)"
     "{"
       "float s=e(v+d*x).d;"
       "if(s<.001)"
         "return 0.;"
       "float y=s*s/(2.*M),i=sqrt(s*s-y*y);"
       "c=min(c,r*i/max(0.,x-y));"
       "M=s;"
       "x+=s;"
     "}"
   "return c;"
 "}"
 "vec3 c(vec3 v,vec3 f,vec3 d,float r)"
 "{"
   "vec3 m;"
   "float x[4],t[4];"
   "for(int y=0;y<3;y++)"
     "{"
       "x[y]=max(0.,dot(reflect(i[y],f),M));"
       "t[y]=pow(x[y],64);"
       "float l=c(v,i[y],.1,20.,25);"
       "m+=(x[y]*r*.333+t[y]*r*3)*s[y]*l;"
     "}"
   "return d+m;"
 "}"
 "void main()"
 "{"
   "i[0]=normalize(vec3(0,10,-2.));"
   "i[1]=normalize(vec3(-50,20.,-50.));"
   "i[2]=normalize(vec3(-50,60.,-7.));"
   "vec2 v=vec2(.5,.7);"
   "s[0]=v.xxy*2;"
   "s[1]=v.xyx;"
   "s[2]=v.yxx*.75;"
   "MA f=n(m,M,20);"
   "vec3 d=c(r);"
   "if(f.hit)"
     "{"
       "x=f.col;"
       "x=c(r,d,f.col,.1);"
       "if(f.col==B)"
         "{"
           "r-=M*.01;"
           "M=normalize(reflect(M,d));"
           "f=n(r,M,2.5);"
           "if(f.hit)"
             "x=mix(x,c(r,c(r),f.col,.1),.1);"
         "}"
     "}"
   "x*=1.-distance(m,r)*.05;"
   "x=pow(x,vec3(.4545));"
 "}";

#endif // SHADER_H_
