// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADERS_H_
# define SHADERS_H_
#define VAR_ITIME B
# define VAR_Frag "f"
# define VAR_B "v"

const char *vshader_vert =
 "#version 400\n"
 "void main()"
 "{"
   "gl_Position=vec4(gl_VertexID%2*2-1,gl_VertexID/2*2-1,1,1);"
 "}";

const char *shader_frag =
 "#version 400\n"
 "uniform float v;"
 "out vec3 f;"
 "vec3 n(vec3 f,vec3 v)"
 "{"
   "vec3 m=cos(v),n=sin(v);"
   "return mat3(vec3(m.y*m.z,n.x*n.y*m.z-n.z*m.x,n.x*n.z+m.x*n.y*m.z),vec3(m.y*n.z,n.x*n.y*n.z+m.x*m.z,m.x*n.y*n.z-n.x*m.z),vec3(-n.y,n.x*m.y,m.x*m.y))*f;"
 "}"
 "float m(vec3 v,vec3 m)"
 "{"
   "vec3 n=abs(v)-m;"
   "return length(max(n,0))+min(max(n.x,max(n.y,n.z)),0)-.1;"
 "}"
 "float x(float v,float m)"
 "{"
   "return min(v,m)-pow(max(1-abs(v-m),0)/2,2);"
 "}"
 "float m(vec3 f)"
 "{"
   "return x(m(n(f,vec3(1.5,0,0))-vec3(0,0,1.5),vec3(20,20,.01)),m(n(f,vec3(1,v,sin(v*.5)*.5))+vec3(0,.5,0),vec3(.75/2)));"
 "}"
 "vec3 n(vec3 v)"
 "{"
   "mat3 n=mat3(v,v,v)-mat3(.001);"
   "return normalize(m(v)-vec3(m(n[0]),m(n[1]),m(n[2])));"
 "}"
 "float x(vec3 v)"
 "{"
   "vec3 x=normalize(vec3(1,.5,-.25));"
   "float f=1,n=1e20;"
   "for(float z=.01;z<10;)"
     "{"
       "float y=m(v+x*z),r;"
       "if(y<1e-4)"
         "return 0;"
       "r=y*y/(2*n);"
       "f=min(f,20*sqrt(y*y-r*r)/max(0,z-r));"
       "n=y;"
       "z+=y;"
     "}"
   "return f;"
 "}"
 "void main()"
 "{"
   "vec2 v=(gl_FragCoord.xy/vec2(2560,1440)*2-1)*vec2(1,.5625);"
   "vec3 z=vec3(0,0,-3.5);"
   "bool r=false;"
   "for(;z.z<20;)"
     "{"
       "float y=m(z);"
       "if(y<1e-4)"
         "{"
           "r=true;"
           "break;"
         "}"
       "z+=normalize(vec3(v,1))*y;"
     "}"
   "float y=length(vec3(0,0,-3.5)-z);"
   "if(r)"
     "{"
       "float d=pow(1.-abs(length(z-vec3(1,.5,-.25)))/100,32)*1.5*(dot(n(z),normalize(vec3(1,.5,-.25)))*.5+.5)*.25+pow(max(dot(normalize(vec3(v,1)),reflect(normalize(vec3(1,.5,-.25)),n(z))),0),128)*.9;"
       "f=vec3(d)+vec3(.1,.4,.1);"
       "f=mix(vec3(0),f,x(vec3(0,0,-3.5)+y*normalize(vec3(v,1)))*.25+.75);"
     "}"
   "f*=mix(f,vec3(1),1-exp(-.1*pow(y,128)));"
   "f-=y*.05;"
 "}";

#endif // SHADERS_H_
