// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADERS_H_
# define SHADERS_H_

const char *vshader_vert =
 "#version 400\n"
 "void main()"
 "{"
   "gl_Position=vec4(gl_VertexID%2*2-1,gl_VertexID/2*2-1,1,1);"
 "}";

const char *shader_frag =
 "#version 400\n"
 "float m=acos(-1);"
 "uint v=uint(gl_FragCoord.x*gl_FragCoord.y)*uint(668265261);"
 "out vec4 Frag;"
 "struct MA{vec3 abd;float spc;float shp;float ems;float mtl;} f;"
 "MA z=MA(vec3(.7,.01,.01),.3,64,0,.3),a=MA(vec3(.1),.1,64,0,.25),g=MA(vec3(.1),.1,64,0,0),n=MA(vec3(.03),.2,64,0,.98),s=MA(vec3(1),1,1,2,0);"
 "vec3 r;"
 "vec3 t(vec3 m,vec3 v)"
 "{"
   "vec3 f=cos(v),g=sin(v);"
   "return mat3(f.z,-g.z,0,g.z,f.z,0,0,0,1)*mat3(f.y,0,g.y,0,1,0,-g.y,0,f.y)*mat3(1,0,0,0,f.x,-g.x,0,g.x,f.x)*m;"
 "}"
 "float t(float v,float f,float m)"
 "{"
   "return min(v,f)-pow(max(m-abs(v-f),0.),2)*.25/m;"
 "}"
 "float t(vec3 v,float f,float m,float y,float s)"
 "{"
   "vec2 g=vec2(length(v.xz),v.y),d=vec2(y,f),z=vec2(y-m,2.*f),x=vec2(g.x-min(g.x,g.y<0.?"
     "m:"
     "y),abs(g.y)-f),a=g-d+z*clamp(dot(d-g,z)/dot(z,z),0.,1.);"
   "return a.x<0.&&x.y<0.?"
     "-1.:"
     "sqrt(min(dot(x,x),dot(a,a)))-s;"
 "}"
 "float t(inout uint v)"
 "{"
   "v^=61^(v>>16)*9^(v>>4)*668265261^v>>15;"
   "return float(v)/4294967296.;"
 "}"
 "vec3 x(inout uint v)"
 "{"
   "float f=t(v)*2-1,g=m*2*t(v),d=sqrt(1-f*f);"
   "return vec3(d*cos(g),d*sin(g),f);"
 "}"
 "float x(vec3 v,vec3 f)"
 "{"
   "vec3 g=abs(v)-f;"
   "return length(max(g,0.))+min(0.,max(g.x,max(g.y,g.z)));"
 "}"
 "float d(vec3 v)"
 "{"
   "v=t(t(v,vec3(-.7,0,-.04)),vec3(0,1.1,0))+vec3(.5,-1.05,0);"
   "vec2 m=fract(v.xz*vec2(233.34,851.74));"
   "m+=dot(m,m+23.45);"
   "float r=x(mod(v,1e-4)-5e-5,vec3(0))-fract(m.x*m.y)*.02,d=dot(v,vec3(0,1,0))+2.2,y=min(min(t(x(v+vec3(0,-1,0),vec3(0))-.5,t(v+vec3(0,.3,0),1,.15,.25,0),.025),t(vec3(v.xy,abs(v.z))+vec3(1.75,1.27,-.75),.05,.4,.4,.015)-.01),t(vec3(v.xy,abs(v.z))+vec3(1.75,1.34,-.75),.05,.55,.45,.02)-.005),s=min(t(t(t(t(v+vec3(0,.6,0),.05,.3,.3,.05),t(v+vec3(0,1,0),.3,.6,.6,.05),.05),x(v+vec3(0,1.4,0),vec3(.9,.15,.9))-.1,.1),mix(x(v+vec3(.5,1.85,0),vec3(1.55,0,1.05))-.45,r,.01),.05),x(v+vec3(15.5,sin(v.x*1.8)*.1+2.05,sin(v.x*0.+sin(v.x*.7))+.75),vec3(15,0,0))-.1),M=-x(v,vec3(20)),p=x(v+vec3(0,-8,0),vec3(4,.1,4));"
   "r=min(min(min(y,s),d),p);"
   "g.abd.z=float(uint(mod(v.x,1)*225)^uint(mod(v.z,1)*225))/255;"
   "f=r==y?"
     "z:"
     "r==d?"
       "a:"
       "r==s?"
         "n:"
         "r==M?"
           "g:"
           "f;"
   "return r;"
 "}"
 "vec3 M(vec3 v)"
 "{"
   "mat3 m=mat3(v,v,v)-mat3(.001);"
   "return normalize(d(v)-vec3(d(m[0]),d(m[1]),d(m[2])));"
 "}"
 "bool M(inout vec3 v,vec3 f)"
 "{"
   "float m=.1,r=0;"
   "for(;r<100&&m>.01;r+=m)"
     "v+=f*m,m=d(v);"
   "return m<.01;"
 "}"
 "vec3 M(vec3 v,vec3 m,vec3 y,float s)"
 "{"
   "float g=max(dot(m,normalize(v)),0);"
   "return(f.abd*r*g*y+pow(g,f.shp)*f.spc)*s;"
 "}"
 "void main()"
 "{"
   "vec2 g=(gl_FragCoord.xy/vec2(2560,1440)*2-1)/vec2(1,2560./1440.);"
   "Frag.xyz=vec3(0);"
   "vec3 z,y,d;"
   "for(int s=0;s<300;s++)"
     "{"
       "d=normalize(vec3(g,1.f/tan(85*.5f*m/180.f)));"
       "y=vec3(g,-5);"
       "r=vec3(.5,.5,1);"
       "for(int F=0;F<9&&M(y,d);F++)"
         "{"
           "z=M(y);"
           "vec3 a=r*f.ems;"
           "a+=a*pow(max(dot(d,z),0),f.shp)*f.spc*f.ems;"
           "Frag.xyz+=a*3;"
           "Frag.xyz+=M(vec3(0,10,-20),z,vec3(.5,.5,.9),1)+M(vec3(-50,20,-50),z,vec3(1,.1,.1),.5)+M(vec3(50,20,-50),z,vec3(.5,1,.125),.8);"
           "d=normalize(mix(normalize(z+x(v)),reflect(d,z),f.mtl));"
           "r*=f.abd;"
           "Frag.w++;"
         "}"
       "Frag.xyz+=Frag.w==0?"
         "vec3(0):"
         "r;"
     "}"
   "Frag.xyz=sqrt(Frag.xyz/Frag.w);"
 "}";

#endif // SHADERS_H_
