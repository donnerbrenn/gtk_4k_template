// Generated with Shader Minifier 1.3.5 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADERS_H_
# define SHADERS_H_

const char *vshader_vert =
 "#version 400\n"
 "void main()"
 "{"
   "gl_Position=vec4(gl_VertexID%2*2-1,gl_VertexID/2*2-1,1,1);"
 "}";

const char *shader_frag =
 "#version 400\n"
 "uint v=uint(gl_FragCoord.x*gl_FragCoord.y)*uint(668265261);"
 "out vec4 Frag;"
 "vec3 f=vec3(1),m;"
 "float F,r,z;"
 "vec3 n(vec3 m,vec3 v)"
 "{"
   "vec3 g=cos(v),f=sin(v);"
   "return mat3(g.z,-f.z,0,f.z,g.z,0,0,0,1)*mat3(g.y,0,f.y,0,1,0,-f.y,0,g.y)*mat3(1,0,0,0,g.x,-f.x,0,f.x,g.x)*m;"
 "}"
 "float n(float v,float f,float m)"
 "{"
   "return min(v,f)-pow(max(m-abs(v-f),0.),2)*.25/m;"
 "}"
 "float n(vec3 v,float f,float m,float y,float F)"
 "{"
   "vec2 g=vec2(length(v.xz),v.y),d=vec2(y,f),z=vec2(y-m,2.*f),r=vec2(g.x-min(g.x,g.y<0.?"
     "m:"
     "y),abs(g.y)-f),x=g-d+z*clamp(dot(d-g,z)/dot(z,z),0.,1.);"
   "return x.x<0.&&r.y<0.?"
     "-1.:"
     "sqrt(min(dot(r,r),dot(x,x)))-F;"
 "}"
 "float n(inout uint v)"
 "{"
   "v^=61^(v>>16)*9^(v>>4)*668265261^v>>15;"
   "return v/4294967296.;"
 "}"
 "vec3 t(inout uint v)"
 "{"
   "float f=n(v)*2-1,m=acos(-1)*2*n(v),g=sqrt(1-f*f);"
   "return vec3(g*cos(m),g*sin(m),f);"
 "}"
 "float s(vec3 v)"
 "{"
   "return max(max(v.x,v.y),v.z);"
 "}"
 "float s(vec3 v,vec3 f)"
 "{"
   "vec3 m=abs(v)-f;"
   "return length(max(m,vec3(0)))+s(min(m,vec3(0)));"
 "}"
 "float d(vec3 v)"
 "{"
   "v=n(n(v,vec3(-.7,0,-.04)),vec3(0,1.1,0));"
   "v.y-=1.05;"
   "v.x+=.5;"
   "m=vec3(0);"
   "F=.3;"
   "r=64;"
   "z=0;"
   "vec2 g=fract(v.xz*vec2(233.34,851.74));"
   "g+=dot(g,g+23.45);"
   "float f=s(mod(v,1e-4)-5e-5,vec3(0))-fract(g.x*g.y)*.002,d=mix(dot(v,vec3(0,1,0))+2.2,f,.01),y=min(min(n(length(v+vec3(0,-1,0))-.5,n(v+vec3(0,.1,0),1,.15,.25,0),.025),min(n(v+vec3(1.75,1.27,-.75),.05,.4,.4,.015),n(v+vec3(1.75,1.27,.75),.05,.4,.4,.015))-.01),min(n(v+vec3(1.75,1.34,.75),.05,.55,.45,.02),n(v+vec3(1.75,1.34,-.75),.05,.55,.45,.02))-.005),x=min(min(y,min(n(n(n(n(v+vec3(0,.6,0),.05,.3,.3,.05),n(v+vec3(0,1,0),.3,.6,.6,.05),.15),s(v+vec3(0,1.4,0),vec3(.9,.15,.9))-.1,.15),mix(s(v+vec3(.5,1.85,0),vec3(1.55,0,1.05))-.45,f,.0025),.15),s(v+vec3(15.5,sin(v.x*1.8)*.1+2.05,sin(v.x*0.+sin(v.x*.7))+.75),vec3(15,0,0))-.1)),d);"
   "if(x==y)"
     "m=vec3(.8,.01,.01),r=64;"
   "if(x==d)"
     "m=vec3(.03),r=64,F=.1;"
   "return x;"
 "}"
 "vec3 x(vec3 v)"
 "{"
   "mat3 m=mat3(v,v,v)-mat3(5e-5);"
   "return normalize(d(v)-vec3(d(m[0]),d(m[1]),d(m[2])));"
 "}"
 "bool d(inout vec3 v,vec3 m)"
 "{"
   "float f=.1,r=0;"
   "for(;r<100&&f>.001;r+=f)"
     "v+=m*f,f=d(v);"
   "return f<.001;"
 "}"
 "vec3 d(vec3 v,vec3 g,vec3 z,float y)"
 "{"
   "float x=max(dot(g,normalize(v)),0);"
   "return(m*f*x*z+pow(x,r)*F)*y;"
 "}"
 "void main()"
 "{"
   "vec2 g=(gl_FragCoord.xy/vec2(2560,1440)*2-1)/vec2(1,2560./1440.);"
   "Frag.xyz=vec3(0);"
   "vec3 y,r,F;"
   "for(int n=0;n<300;n++)"
     "{"
       "F=normalize(vec3(g,1.f/tan(85*.5f*acos(-1)/180.f)));"
       "r=vec3(g,-5);"
       "f=vec3(.5,.5,1);"
       "for(int i=0;i<8&&d(r,F);i++)"
         "y=x(r),Frag.xyz+=z,Frag.xyz+=d(vec3(0,10,-20),y,vec3(.5,.5,.9),.5),Frag.xyz+=d(vec3(-50,20,-50),y,vec3(1,.1,.1),.5),Frag.xyz+=d(vec3(50,20,-50),y,vec3(.5,1,.125),.8),Frag.xyz+=d(t(v),y,vec3(0,0,1),.25),F=normalize(y+t(v)),f*=m*max(dot(F,y),0),Frag.w++;"
       "Frag.xyz+=Frag.w==0?"
         "vec3(0):"
         "f;"
     "}"
   "Frag.xyz=sqrt(Frag.xyz/Frag.w);"
 "}";

#endif // SHADERS_H_
